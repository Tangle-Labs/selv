version: '3'

services:

##################################################################
#  Reverse Proxy and SSL                                         #
##################################################################

  traefik:
    image: traefik:v2.11
    command:
      - "--accesslog=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.grpc.address=:5000"
      - "--log.level=DEBUG"
    ports:
      - "${HTTP_PORT}:80/tcp"
      - "${GRPC_PORT}:5000/tcp"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./data/letsencrypt:/letsencrypt"
  
  redis:
    image: redis:latest
    labels:
      traefik.enable: false

  backend:
    build:
      context: ./
      dockerfile: ./backend/Dockerfile
    expose:
      - '3000'
      - '50051'
    # depends_on:
    #   - redis
    #   - identity
    environment:
      ISSUERS_BANK_DID: did:iota:snd:0x2cfb60f00089a91a96fa8fcee5e2bda15f51b0b062762ad9ca846bba536f8818
      ISSUERS_BANK_FRAGMENT: S3zEW4inNy8FYZEMVTEthdzqqSBq1WglM2k75xKHzy0
    labels:
      traefik.enable: true
      traefik.http.routers.backend.rule: Host(`backend.selv.local`)
      traefik.http.routers.backend.entrypoints: web
      traefik.http.routers.backend.service: backend
      traefik.http.services.backend.loadbalancer.server.port: "3000"

  oid4vc-tanglelabs:
    build:
      context: ./
      dockerfile: ./oid4vc/TangleLabs/Dockerfile
    environment:
      RP_DID: did:iota:snd:0x2cfb60f00089a91a96fa8fcee5e2bda15f51b0b062762ad9ca846bba536f8818
      SIGNER_KEYID: pK0JAYw5RFFKqorBn0x4w98zl2UBfRys
      KEY_FRAGMENT: key-1
      PUBLIC_URL: "192.168.0.234:8080"
    expose:
      - '3333'
      - '50051'
    volumes:
      - ./proto:/usr/proto
    labels:
      traefik.enable: true
      traefik.http.routers.oid4vc-tanglelabs.rule: Host(`bank.selv.local`)
      traefik.http.routers.oid4vc-tanglelabs.entrypoints: web
      traefik.http.routers.oid4vc-tanglelabs.service: oid4vc-tanglelabs
      traefik.http.services.oid4vc-tanglelabs.loadbalancer.server.port: "3333"

  oid4vc-waltid:
    build:
      context: ./
      dockerfile: ./oid4vc/walt.id/Dockerfile
    expose:
      - '50051'
    volumes:
      - ./proto:/usr/proto
    labels:
      traefik.enable: true
      traefik.http.routers.oid4vc-waltid.rule: Host(`government.selv.local`)
      traefik.http.routers.oid4vc-waltid.entrypoints: web
      traefik.http.routers.oid4vc-waltid.service: oid4vc-waltid
      traefik.http.services.oid4vc-waltid.loadbalancer.server.port: "3000"

  oid4vc-impierce:
    image: impierce/ssi-agent
    expose:
      - '3033'
    volumes:
      - ./proto:/usr/proto
    labels:
      traefik.enable: true
      traefik.http.routers.oid4vc-impierce.rule: Host(`insurance.selv.local`)
      traefik.http.routers.oid4vc-impierce.entrypoints: web
      traefik.http.routers.oid4vc-impierce.service: oid4vc-impierce
      traefik.http.services.oid4vc-impierce.loadbalancer.server.port: "3033"
    environment:
      #AGENT_CONFIG_LOG_FORMAT: json
      AGENT_CONFIG_EVENT_STORE: postgres
      #AGENT_CONFIG_BASE_PATH: "unicore"
      AGENT_APPLICATION_URL: ${backend}
      AGENT_STORE_DB_CONNECTION_STRING: postgresql://demo_user:demo_pass@cqrs-postgres-db:5432/demo

  cqrs-postgres-db:
    image: postgres
    expose:
      - 5432
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: demo_user
      POSTGRES_PASSWORD: demo_pass
    volumes:
      - "./data/db:/docker-entrypoint-initdb.d"

  identity:
    image: iotaledger/identity-grpc:alpha
    environment:
      - API_ENDPOINT=http://host.docker.internal
      - STRONGHOLD_PWD=nhNc9yAjbCuh6YQxKlceLAUrWCwAYLvu
      - SNAPSHOT_PATH=/stronghold.hodl
    volumes:
      - "./data/stronghold.hodl:/stronghold.hodl"
    expose:
     - '50051'
    labels:
      traefik.enable: false
